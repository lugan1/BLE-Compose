package com.softnet.blecompose.bluetooth.specification

enum class ServiceUUID(val uuid: String) {
    // 참고주소: https://www.bluetooth.com/specifications/gatt/services/

    // Bluetooth SIG
    GENERIC_ACCESS("00001800-0000-1000-8000-00805f9b34fb"),
    GENERIC_ATTRIBUTE("00001801-0000-1000-8000-00805f9b34fb"),
    DEVICE_INFORMATION("0000180a-0000-1000-8000-00805f9b34fb"),
    BATTERY_SERVICE("0000180f-0000-1000-8000-00805f9b34fb"),
    CURRENT_TIME_SERVICE("00001805-0000-1000-8000-00805f9b34fb"),
    REFERENCE_TIME_UPDATE_SERVICE("00001806-0000-1000-8000-00805f9b34fb"),
    NEXT_DST_CHANGE_SERVICE("00001807-0000-1000-8000-00805f9b34fb"),
    GLUCOSE("00001808-0000-1000-8000-00805f9b34fb"),
    HEALTH_THERMOMETER("00001809-0000-1000-8000-00805f9b34fb"),
    HEART_RATE("0000180d-0000-1000-8000-00805f9b34fb"),
    PHONE_ALERT_STATUS_SERVICE("0000180e-0000-1000-8000-00805f9b34fb"),
    BLOOD_PRESSURE("00001810-0000-1000-8000-00805f9b34fb"),
    ALERT_NOTIFICATION_SERVICE("00001811-0000-1000-8000-00805f9b34fb"),
    HUMAN_INTERFACE_DEVICE("00001812-0000-1000-8000-00805f9b34fb"),
    SCAN_PARAMETERS("00001813-0000-1000-8000-00805f9b34fb"),
    RUNNING_SPEED_AND_CADENCE("00001814-0000-1000-8000-00805f9b34fb"),
    AUTOMATION_IO("00001815-0000-1000-8000-00805f9b34fb"),
    CYCLING_SPEED_AND_CADENCE("00001816-0000-1000-8000-00805f9b34fb"),
    CYCLING_POWER("00001818-0000-1000-8000-00805f9b34fb"),
    LOCATION_AND_NAVIGATION("00001819-0000-1000-8000-00805f9b34fb"),
    ENVIRONMENTAL_SENSING("0000181a-0000-1000-8000-00805f9b34fb"),
    BODY_COMPOSITION("0000181b-0000-1000-8000-00805f9b34fb"),
    USER_DATA("0000181c-0000-1000-8000-00805f9b34fb"),
    WEIGHT_SCALE("0000181d-0000-1000-8000-00805f9b34fb"),

    // Nordic Semiconductor
    DEVICE_FIRMWARE_UPDATE_SERVICE("00001530-1212-efde-1523-785feabcd123"),
    SECURITY_SERVICE("0000181e-0000-1000-8000-00805f9b34fb"),
    SECURE_DFU_SERVICE("0000fe59-0000-1000-8000-00805f9b34fb"),
    NORDIC_UART_SERVICE("6e400001-b5a3-f393-e0a9-e50e24dcca9e");

    companion object {
        fun from(uuid: String): ServiceUUID {
            return values().find { it.uuid == uuid } ?: throw IllegalArgumentException("Unknown UUID $uuid")
        }
    }
}